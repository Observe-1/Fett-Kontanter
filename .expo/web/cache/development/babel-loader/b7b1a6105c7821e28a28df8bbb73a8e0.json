{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Adil\\\\Documents\\\\Financial\\\\screens\\\\PortfolioScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Svg, { Path } from \"react-native-svg\";\nimport Animated, { useAnimatedProps, useAnimatedStyle, useSharedValue, withTiming } from \"react-native-reanimated\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport { mixPath, useVector } from \"react-native-redash\";\nimport { GraphIndex, graphs, SIZE } from \"../Components/Model\";\nimport Cursor from \"../Components/Cursor\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar AnimatedPath = Animated.createAnimatedComponent(Path);\nvar SELECTION_WIDTH = width - 32;\nvar BUTTON_WIDTH = (width - 32) / graphs.length;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  backgroundSelection: _objectSpread(_objectSpread({\n    backgroundColor: \"#f3f3f3\"\n  }, StyleSheet.absoluteFillObject), {}, {\n    width: BUTTON_WIDTH,\n    borderRadius: 8\n  }),\n  selection: {\n    flexDirection: \"row\",\n    width: SELECTION_WIDTH,\n    alignSelf: \"center\"\n  },\n  labelContainer: {\n    padding: 16,\n    width: BUTTON_WIDTH\n  },\n  label: {\n    fontSize: 16,\n    color: \"black\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\n\nvar Graph = function Graph() {\n  var translation = useVector();\n  var transition = useSharedValue(0);\n  var previous = useSharedValue(0);\n  var current = useSharedValue(0);\n  var animatedProps = useAnimatedProps(function () {\n    const _f = function () {\n      var previousPath = graphs[previous.value].data.path;\n      var currentPath = graphs[current.value].data.path;\n      return {\n        d: mixPath(transition.value, previousPath, currentPath)\n      };\n    };\n\n    _f._closure = {\n      graphs,\n      previous,\n      current,\n      mixPath,\n      transition\n    };\n    _f.asString = \"function _f(){const{graphs,previous,current,mixPath,transition}=jsThis._closure;{var previousPath=graphs[previous.value].data.path;var currentPath=graphs[current.value].data.path;return{d:mixPath(transition.value,previousPath,currentPath)};}}\";\n    _f.__workletHash = 11209726926581;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var style = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          translateX: withTiming(BUTTON_WIDTH * current.value)\n        }]\n      };\n    };\n\n    _f._closure = {\n      withTiming,\n      BUTTON_WIDTH,\n      current\n    };\n    _f.asString = \"function _f(){const{withTiming,BUTTON_WIDTH,current}=jsThis._closure;{return{transform:[{translateX:withTiming(BUTTON_WIDTH*current.value)}]};}}\";\n    _f.__workletHash = 2433038231148;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Svg, {\n    width: SIZE,\n    height: SIZE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(AnimatedPath, {\n    animatedProps: animatedProps,\n    fill: \"transparent\",\n    stroke: \"black\",\n    strokeWidth: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), React.createElement(Cursor, {\n    translation: translation,\n    index: current,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.selection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.absoluteFill,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.backgroundSelection, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), graphs.map(function (graph, index) {\n    return React.createElement(TouchableWithoutFeedback, {\n      key: graph.label,\n      onPress: function onPress() {\n        previous.value = current.value;\n        transition.value = 0;\n        current.value = index;\n        transition.value = withTiming(1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.View, {\n      style: [styles.labelContainer],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, graph.label)));\n  })));\n};\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/Adil/Documents/Financial/screens/PortfolioScreen.js"],"names":["React","Svg","Path","Animated","useAnimatedProps","useAnimatedStyle","useSharedValue","withTiming","TouchableWithoutFeedback","mixPath","useVector","GraphIndex","graphs","SIZE","Cursor","Dimensions","get","width","AnimatedPath","createAnimatedComponent","SELECTION_WIDTH","BUTTON_WIDTH","length","styles","StyleSheet","create","container","flex","backgroundColor","backgroundSelection","absoluteFillObject","borderRadius","selection","flexDirection","alignSelf","labelContainer","padding","label","fontSize","color","fontWeight","textAlign","Graph","translation","transition","previous","current","animatedProps","previousPath","value","data","path","currentPath","d","style","transform","translateX","absoluteFill","map","graph","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Text, View, StyleSheet, Dimensions } from \"react-native\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport Animated, {\r\n  useAnimatedProps,\r\n  useAnimatedStyle,\r\n  useSharedValue,\r\n  withTiming,\r\n} from \"react-native-reanimated\";\r\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\r\nimport { mixPath, useVector } from \"react-native-redash\";\r\n\r\nimport { GraphIndex, graphs, SIZE } from \"../Components/Model\";\r\nimport Cursor from \"../Components/Cursor\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\r\n\r\nconst SELECTION_WIDTH = width - 32;\r\nconst BUTTON_WIDTH = (width - 32) / graphs.length;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  backgroundSelection: {\r\n    backgroundColor: \"#f3f3f3\",\r\n    ...StyleSheet.absoluteFillObject,\r\n    width: BUTTON_WIDTH,\r\n    borderRadius: 8,\r\n  },\r\n  selection: {\r\n    flexDirection: \"row\",\r\n    width: SELECTION_WIDTH,\r\n    alignSelf: \"center\",\r\n  },\r\n  labelContainer: {\r\n    padding: 16,\r\n    width: BUTTON_WIDTH,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst Graph = () => {\r\n  const translation = useVector();\r\n  const transition = useSharedValue(0);\r\n  const previous = useSharedValue(0);\r\n  const current = useSharedValue(0);\r\n  const animatedProps = useAnimatedProps(() => {\r\n    const previousPath = graphs[previous.value].data.path;\r\n    const currentPath = graphs[current.value].data.path;\r\n    return {\r\n      d: mixPath(transition.value, previousPath, currentPath),\r\n    };\r\n  });\r\n  const style = useAnimatedStyle(() => ({\r\n    transform: [{ translateX: withTiming(BUTTON_WIDTH * current.value) }],\r\n  }));\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Svg width={SIZE} height={SIZE}>\r\n          <AnimatedPath\r\n            animatedProps={animatedProps}\r\n            fill=\"transparent\"\r\n            stroke=\"black\"\r\n            strokeWidth={3}\r\n          />\r\n        </Svg>\r\n        <Cursor translation={translation} index={current} />\r\n      </View>\r\n      <View style={styles.selection}>\r\n        <View style={StyleSheet.absoluteFill}>\r\n          <Animated.View style={[styles.backgroundSelection, style]} />\r\n        </View>\r\n        {graphs.map((graph, index) => {\r\n          return (\r\n            <TouchableWithoutFeedback\r\n              key={graph.label}\r\n              onPress={() => {\r\n                previous.value = current.value;\r\n                transition.value = 0;\r\n                current.value = index;\r\n                transition.value = withTiming(1);\r\n              }}\r\n            >\r\n              <Animated.View style={[styles.labelContainer]}>\r\n                <Text style={styles.label}>{graph.label}</Text>\r\n              </Animated.View>\r\n            </TouchableWithoutFeedback>\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"]},"metadata":{},"sourceType":"module"}