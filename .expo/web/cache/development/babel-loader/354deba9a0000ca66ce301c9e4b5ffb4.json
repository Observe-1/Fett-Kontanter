{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Adil\\\\Documents\\\\Financial\\\\Components\\\\Cursor.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PanGestureHandler } from \"react-native-gesture-handler\";\nimport Animated, { useAnimatedGestureHandler, useSharedValue, useAnimatedStyle, withSpring } from \"react-native-reanimated\";\nimport { getYForX, Vector } from \"react-native-redash\";\nimport { GraphIndex, graphs } from \"./Model\";\nvar CURSOR = 50;\nvar styles = StyleSheet.create({\n  cursor: {\n    width: CURSOR,\n    height: CURSOR,\n    borderRadius: CURSOR / 2,\n    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  cursorBody: {\n    width: 15,\n    height: 15,\n    borderRadius: 7.5,\n    backgroundColor: \"black\"\n  }\n});\n\nvar Cursor = function Cursor(_ref) {\n  var index = _ref.index,\n      translation = _ref.translation;\n  var isActive = useSharedValue(false);\n  var onGestureEvent = useAnimatedGestureHandler({\n    onStart: function () {\n      const _f = function () {\n        isActive.value = true;\n      };\n\n      _f._closure = {\n        isActive\n      };\n      _f.asString = \"function onStart(){const{isActive}=jsThis._closure;{isActive.value=true;}}\";\n      _f.__workletHash = 13578518740650;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onActive: function () {\n      const _f = function (event) {\n        translation.x.value = event.x;\n        translation.y.value = getYForX(graphs[index.value].data.path, translation.x.value);\n      };\n\n      _f._closure = {\n        translation: {\n          x: translation.x,\n          y: translation.y\n        },\n        getYForX,\n        graphs,\n        index\n      };\n      _f.asString = \"function onActive(event){const{translation,getYForX,graphs,index}=jsThis._closure;{translation.x.value=event.x;translation.y.value=getYForX(graphs[index.value].data.path,translation.x.value);}}\";\n      _f.__workletHash = 13324345902408;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onEnd: function () {\n      const _f = function () {\n        isActive.value = false;\n      };\n\n      _f._closure = {\n        isActive\n      };\n      _f.asString = \"function onEnd(){const{isActive}=jsThis._closure;{isActive.value=false;}}\";\n      _f.__workletHash = 14225530499950;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }()\n  });\n  var style = useAnimatedStyle(function () {\n    const _f = function () {\n      var translateX = translation.x.value - CURSOR / 2;\n      var translateY = translation.y.value - CURSOR / 2;\n      return {\n        transform: [{\n          translateX: translateX\n        }, {\n          translateY: translateY\n        }, {\n          scale: withSpring(isActive.value ? 1 : 0)\n        }]\n      };\n    };\n\n    _f._closure = {\n      translation: {\n        x: translation.x,\n        y: translation.y\n      },\n      CURSOR,\n      withSpring,\n      isActive\n    };\n    _f.asString = \"function _f(){const{translation,CURSOR,withSpring,isActive}=jsThis._closure;{var translateX=translation.x.value-CURSOR/2;var translateY=translation.y.value-CURSOR/2;return{transform:[{translateX:translateX},{translateY:translateY},{scale:withSpring(isActive.value?1:0)}]};}}\";\n    _f.__workletHash = 16735691089193;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(View, {\n    style: StyleSheet.absoluteFill,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(PanGestureHandler, {\n    onGestureEvent: onGestureEvent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(Animated.View, {\n    style: StyleSheet.absoluteFill,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.cursor, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.cursorBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Cursor;","map":{"version":3,"sources":["C:/Users/Adil/Documents/Financial/Components/Cursor.js"],"names":["React","PanGestureHandler","Animated","useAnimatedGestureHandler","useSharedValue","useAnimatedStyle","withSpring","getYForX","Vector","GraphIndex","graphs","CURSOR","styles","StyleSheet","create","cursor","width","height","borderRadius","backgroundColor","justifyContent","alignItems","cursorBody","Cursor","index","translation","isActive","onGestureEvent","onStart","value","onActive","event","x","y","data","path","onEnd","style","translateX","translateY","transform","scale","absoluteFill"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { PanGestureHandler } from \"react-native-gesture-handler\";\r\nimport Animated, {\r\n  useAnimatedGestureHandler,\r\n  useSharedValue,\r\n  useAnimatedStyle,\r\n  withSpring,\r\n} from \"react-native-reanimated\";\r\nimport { getYForX, Vector } from \"react-native-redash\";\r\n\r\nimport { GraphIndex, graphs } from \"./Model\";\r\n\r\nconst CURSOR = 50;\r\nconst styles = StyleSheet.create({\r\n  cursor: {\r\n    width: CURSOR,\r\n    height: CURSOR,\r\n    borderRadius: CURSOR / 2,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  cursorBody: {\r\n    width: 15,\r\n    height: 15,\r\n    borderRadius: 7.5,\r\n    backgroundColor: \"black\",\r\n  },\r\n});\r\n\r\nconst Cursor = ({ index, translation }) => {\r\n  const isActive = useSharedValue(false);\r\n  const onGestureEvent = useAnimatedGestureHandler({\r\n    onStart: () => {\r\n      isActive.value = true;\r\n    },\r\n    onActive: (event) => {\r\n      translation.x.value = event.x;\r\n      translation.y.value = getYForX(\r\n        graphs[index.value].data.path,\r\n        translation.x.value\r\n      );\r\n    },\r\n    onEnd: () => {\r\n      isActive.value = false;\r\n    },\r\n  });\r\n\r\n  const style = useAnimatedStyle(() => {\r\n    const translateX = translation.x.value - CURSOR / 2;\r\n    const translateY = translation.y.value - CURSOR / 2;\r\n    return {\r\n      transform: [\r\n        { translateX },\r\n        { translateY },\r\n        { scale: withSpring(isActive.value ? 1 : 0) },\r\n      ],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <View style={StyleSheet.absoluteFill}>\r\n      <PanGestureHandler {...{ onGestureEvent }}>\r\n        <Animated.View style={StyleSheet.absoluteFill}>\r\n          <Animated.View style={[styles.cursor, style]}>\r\n            <View style={styles.cursorBody} />\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </PanGestureHandler>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Cursor;"]},"metadata":{},"sourceType":"module"}