{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport MutableValue from \"./MutableValue\";\n\nvar Mapper = function () {\n  function Mapper(module, mapper) {\n    var _this = this;\n\n    var inputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var outputs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    _classCallCheck(this, Mapper);\n\n    this.dirty = true;\n    this.id = Mapper.MAPPER_ID++;\n    this.inputs = this.extractMutablesFromArray(inputs);\n    this.outputs = this.extractMutablesFromArray(outputs);\n    this.mapper = mapper;\n\n    var markDirty = function markDirty() {\n      _this.dirty = true;\n      module.maybeRequestRender();\n    };\n\n    this.inputs.forEach(function (input) {\n      input.addListener(markDirty);\n    });\n  }\n\n  _createClass(Mapper, [{\n    key: \"execute\",\n    value: function execute() {\n      this.dirty = false;\n      this.mapper();\n    }\n  }, {\n    key: \"extractMutablesFromArray\",\n    value: function extractMutablesFromArray(array) {\n      var res = [];\n\n      function extractMutables(value) {\n        if (value instanceof MutableValue) {\n          res.push(value);\n        } else if (Array.isArray(value)) {\n          value.forEach(function (v) {\n            return extractMutables(v);\n          });\n        } else if (typeof value === 'object') {\n          Object.keys(value).forEach(function (key) {\n            extractMutables(value[key]);\n          });\n        }\n      }\n\n      extractMutables(array);\n      return res;\n    }\n  }]);\n\n  return Mapper;\n}();\n\nMapper.MAPPER_ID = 1;\nexport { Mapper as default };","map":{"version":3,"sources":["C:/Users/Adil/Documents/Financial/node_modules/react-native-reanimated/src/reanimated2/js-reanimated/Mapper.js"],"names":["MutableValue","Mapper","module","mapper","inputs","outputs","dirty","id","MAPPER_ID","extractMutablesFromArray","markDirty","maybeRequestRender","forEach","input","addListener","array","res","extractMutables","value","push","Array","isArray","v","Object","keys","key"],"mappings":";;AAAA,OAAOA,YAAP;;IAEqBC,M;AAKnB,kBAAYC,MAAZ,EAAoBC,MAApB,EAAuD;AAAA;;AAAA,QAA3BC,MAA2B,uEAAlB,EAAkB;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAAA,SAFvDC,KAEuD,GAF/C,IAE+C;AACrD,SAAKC,EAAL,GAAUN,MAAM,CAACO,SAAP,EAAV;AACA,SAAKJ,MAAL,GAAc,KAAKK,wBAAL,CAA8BL,MAA9B,CAAd;AACA,SAAKC,OAAL,GAAe,KAAKI,wBAAL,CAA8BJ,OAA9B,CAAf;AACA,SAAKF,MAAL,GAAcA,MAAd;;AAEA,QAAMO,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAA,KAAI,CAACJ,KAAL,GAAa,IAAb;AACAJ,MAAAA,MAAM,CAACS,kBAAP;AACD,KAHD;;AAKA,SAAKP,MAAL,CAAYQ,OAAZ,CAAoB,UAACC,KAAD,EAAW;AAC7BA,MAAAA,KAAK,CAACC,WAAN,CAAkBJ,SAAlB;AACD,KAFD;AAGD;;;;WAED,mBAAU;AACR,WAAKJ,KAAL,GAAa,KAAb;AACA,WAAKH,MAAL;AACD;;;WAED,kCAAyBY,KAAzB,EAAgC;AAC9B,UAAMC,GAAG,GAAG,EAAZ;;AAEA,eAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,YAAIA,KAAK,YAAYlB,YAArB,EAAmC;AACjCgB,UAAAA,GAAG,CAACG,IAAJ,CAASD,KAAT;AACD,SAFD,MAEO,IAAIE,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AAC/BA,UAAAA,KAAK,CAACN,OAAN,CAAc,UAACU,CAAD;AAAA,mBAAOL,eAAe,CAACK,CAAD,CAAtB;AAAA,WAAd;AACD,SAFM,MAEA,IAAI,OAAOJ,KAAP,KAAiB,QAArB,EAA+B;AACpCK,UAAAA,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBN,OAAnB,CAA2B,UAACa,GAAD,EAAS;AAClCR,YAAAA,eAAe,CAACC,KAAK,CAACO,GAAD,CAAN,CAAf;AACD,WAFD;AAGD;AACF;;AAEDR,MAAAA,eAAe,CAACF,KAAD,CAAf;AACA,aAAOC,GAAP;AACD;;;;;;AA3CkBf,M,CACZO,S,GAAY,C;SADAP,M","sourcesContent":["import MutableValue from './MutableValue';\n\nexport default class Mapper {\n  static MAPPER_ID = 1;\n\n  dirty = true;\n\n  constructor(module, mapper, inputs = [], outputs = []) {\n    this.id = Mapper.MAPPER_ID++;\n    this.inputs = this.extractMutablesFromArray(inputs);\n    this.outputs = this.extractMutablesFromArray(outputs);\n    this.mapper = mapper;\n\n    const markDirty = () => {\n      this.dirty = true;\n      module.maybeRequestRender();\n    };\n\n    this.inputs.forEach((input) => {\n      input.addListener(markDirty);\n    });\n  }\n\n  execute() {\n    this.dirty = false;\n    this.mapper();\n  }\n\n  extractMutablesFromArray(array) {\n    const res = [];\n\n    function extractMutables(value) {\n      if (value instanceof MutableValue) {\n        res.push(value);\n      } else if (Array.isArray(value)) {\n        value.forEach((v) => extractMutables(v));\n      } else if (typeof value === 'object') {\n        Object.keys(value).forEach((key) => {\n          extractMutables(value[key]);\n        });\n      }\n    }\n\n    extractMutables(array);\n    return res;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}